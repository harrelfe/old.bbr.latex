bwplot(dzgroup ~ crea, data=support, panel=panel.bpplot,
probs=c(.05,.25), xlim=c(0,8), xlab='Serum Creatinine')
getHdata()
getHdata(plasma)
contents(plasma)
getHdata(FEV)
dim(fev)
dim(FEV)
contents(FEV)
getHdata(birth.estriol)
contents(birth.estriol)
getHdata(dmd)
contents(dmd)
describe(dmd)
objects()
names(dmd)
contents(birth.estriol)
contents(FEV)
describe(FEV)
getHdata(FEV)
FEV <- subset(FEV, runif(nrow(FEV)) < 1/4)   # 1/4 sample
tplot(fev ~ smoke, data=FEV)
getHdata(FEV); set.seed(13)
FEV <- subset(FEV, runif(nrow(FEV)) < 1/8)   # 1/8 sample
tplot(fev ~ smoke, data=FEV)
contents(FEV)
getHdata(FEV); set.seed(13)
FEV <- subset(FEV, runif(nrow(FEV)) < 1/8)   # 1/8 sample
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
par(mar=c(4,7,1,4))
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
par(mar=c(4,9,1,4))
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
dist=.1, boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
dist=.01, boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
dist=.02, boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
table(FEV$sex)
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
col=c(female='darkred',male='darkblue')[as.character(FEV$sex)],
dist=.02, boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
show.pch()
tplot(fev ~ smoke, data=FEV, show.n=TRUE, bty='L', type='db',
pch=20, las=1, mean.line=TRUE, horizontal=TRUE, ylab='FEV1',
col=c(female='darkred',male='darkblue')[as.character(FEV$sex)],
dist=.02, boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))
contents(FEV)
smean.cl.normal
s
require(lattice)   # Figure (*\ref{fig:descript-glybox}*):
getHdata(diabetes)
bwplot(cut2(age,g=4) ~ glyhb | cut2(waist,g=2)*gender, data=diabetes,
panel=panel.bpplot, cex=.3, xlab='Glycosylated Hemoglobin',
main='Extended Box Plots by Sex, Waist Size < 38in, Age Quartiles')
names(diabetes)
bwplot(cut2(age,g=4) ~ glyhb | cut2(waist,g=2)*gender, data=diabetes)
traceback()
print(w, panel.error=stop)
traceback()
source('~/R/Hmisc/R/panel.bpplot.s')
source('~/R/Hmisc/R/panel.bpplot.s')
xless(panel.bpplot)
source('/tmp/hmisc.s')
xless(panel.bpplot)
xless(zz)
system('cat /tmp/z')
source('~/R/Hmisc/R/panel.bpplot.s')
system('cat /tmp/z')
xless(zz)
source('~/R/Hmisc/R/panel.bpplot.s')
xless(zz)
system('cat /tmp/z')
source('~/R/Hmisc/R/panel.bpplot.s')
zz
source('~/R/Hmisc/R/panel.bpplot.s')
source('~/R/Hmisc/R/panel.bpplot.s')
q()
with(sleep, tapply(extra, drug, mean))
with(sleep, tapply(extra, drug, sd))
source('http://biostat.mc.vanderbilt.edu/wiki/pub/Main/TatsukiRcode/TatsukiRcodeTplot.R')
par(mar=c(4,9,1,4))
tplot(extra ~ drug, data=sleep, show.n=TRUE, bty='L', type='db',
pch=20, las=1, mean.line=TRUE, horizontal=TRUE, ylab='Extra Hours',
dist=.02, boxcol='lightyellow1', boxborder=gray(.8),
boxplot.pars=list(notch=TRUE, boxwex=.5))  # Fig. (*\ref{fig:htest-sleepa}*)
tplot(extra ~ drug, data=sleep, show.n=TRUE, bty='L', type='db',
pch=20, las=1, mean.line=TRUE, horizontal=TRUE, ylab='Extra Hours',
dist=.02, boxcol='lightyellow1', boxborder=gray(.8))
args(t.test)
?t.test
2.33-.75
?t.test
drug1 <- c(.7, -1.6, -.2, -1.2, -.1, 3.4, 3.7, .8, 0, 2)
drug2 <- c(1.9, .8, 1.1, .1, -.1, 4.4, 5.5, 1.6, 4.6)
drug2-drug1
drug1 <- c(.7, -1.6, -.2, -1.2, -.1, 3.4, 3.7, .8, 0, 2)
drug2 <- c(1.9, .8, 1.1, .1, -.1, 4.4, 5.5, 1.6, 4.6, 3.4)
drug2-drug1
mean(drug1);sd(drug1)
mean(drug2);sd(drug2)
par('usr')
abline(h=2, col='red')
args(segments)
mean(drug1);mean(drug2)
sd(drug1);sd(drug2)
drug2-drug1
?t.test
args(bpower)
require(Hmisc)
args(bpower)
bpower(.5, .7, 100)
bpower(.5, .7, n1=100, n2=100)
args(bsamsize)
bsamsize(.0015, .8 * .0015, alpha=0.05, power=0.8)
2* (1 - pnorm(1.96))
n1 <- 3220;     n2 <- 10245
p1 <- 683 / n1; p2 <- 1498 / n2
pp <- (n1 * p1 + n2 * p2) / (n1 + n2)
se <- sqrt(pp * (1 - pp) * (1 / n1 + 1 / n2))
z  <- (p1 - p2) / se
pval <- 2 * (1 - pnorm(abs(z)))
c(p1=p1, p2=p2, p=p, se=se, z=z, pval=pval)
chisq.test
?chisq.test
x
x
chisq.test(x)
args(chisq.test)
chisq.test(x, correct=FALSE)
chisq.test(x, correct=FALSE, simlate.p.value=TRUE)
chisq.test(x, correct=FALSE, simulate.p.value=TRUE)
chisq.test(x, correct=FALSE, simulate.p.value=TRUE,B=10000)
chisq.test(x, correct=FALSE, simulate.p.value=TRUE,B=100000)
chisq.test(x, correct=FALSE, simulate.p.value=TRUE,B=1000000)
chisq.test(x, correct=FALSE, simulate.p.value=TRUE,B=1e6)
chisq.test(x, correct=FALSE, simulate.p.value=TRUE,B=1e6)
chisq.test(x, simulate.p.value=TRUE,B=1e6)
?chisq.test
1.96 * sqrt(1/2)
.5 * 1.96^2
2^16
sqrt(2 / .05 / .95)
sqrt(2 / .05 / .95)^2
names(d)
log2(2)
?bsamsize
args(bsamsize)
364/.9
?bsamsize
or
x
args(chisq.test)
args(chisq.test)
args(fisher.test)
x
(19/6) / (100/11)
(6/19) / (11/100)
or
args(fisher.test)
fisher.test(x)
fisher.test(t(x))
or
?fisher.test
sr <- c(1.5, -1.5, 4, 3)
z <- sum(sr) / sqrt(sum(sr ^ 2))
pval <- 2 * (1 - pnorm(abs(z)))
c(z=z, pval=pval)
q()
require(Hmisc)
coef(fb)
q()
q()
getHdata()
xless(contents(nhgh))
f
anova(f)
f
anova(f)
f
hist(resid(f))
hist(resid(f, nclass=50))
hist(resid(f, nclass=100))
names(f)
f$y
table(f$y)
table(resid(f))
plot(resid(f))
hist(resid(f), nclass=100)
f
1/1.75
args(summary.rms)
args(rms:::summary.rms)
args(rms:::plot.summary.rms)
source('~/R/rms/R/summary.rms.s')
summary(f)
source('/tmp/rms.s')
summary(f)
traceback()
args(rms:::print.ols)
args(csv.get)
search()
getwd()
q()
getwd()
q()
hist(nhgh$gh ^ -1.75)
range(nhgh$gh ^ -1.75)
q()
require(Hmisc)
getHdata(diabetes)
args(segments)
?latex.anova.rms
?geom_boxplot
?stat_summary
?geom_boxplot
xless(geom_boxplot)
?stat_summary
?layer
)
)
)
q()
require(Hmisc)
args(stat_summary)
?geom_boxplot
geom_boxplot
GeomBoxplot$new
GeomBoxplot
args(stat_summary)
?geom_polygon
example(geom_polygon)
?geom_violin
example(geom_violin)
ggplot(FEV, aes(x=sex, y=fev)) +
geom_violin() +
geom_dotplot(binaxis='y', stackdir='center', position='dodge') +
facet_grid(~ smoke) +
xlab('') + ylab(expression(FEV[1])) + coord_flip()
par(ask=FALSE)
?stat_summary
?geom_point
qqline(r)
?qqnorm
qqline(f)
qqline(r)
class(r)
qqline(as.numeric(a))
qqline(as.numeric(r))
q()
require(Hmisc)
q()
require(Hmisc)
require(ggplot2, data.table)
stats
stats
q()
require(Hmisc)
getHdata(esopH)
contents(esopH)
xl <- label(esopH$conv)
yl <- label(esopH$orophar)
ggplot(esopH, aes(x=conv, y=orophar)) + geom_point(pch='.') +
xlab(xl) + ylab(yl) +   # Fig. (*\ref{fig:descript-pH}*)
geom_abline(intercept = 0, slope = 1)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
?scale_color_gradient
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
?terrain.colors
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
args(pretty)
pretty(c(0, 17))
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
pretty(c(1,3436))
pretty(sqrt(c(1,3436)))
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
args(pretty)
?pretty
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
rainbow(10)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
?rainbow
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
source('~/R/Hmisc/R/ggfreqScatter.r')
with(esopH, ggfreqScatter(conv, orophar, bins=50,
xlab=xl, ylab=yl))   # Fig. (*\ref{fig:descript-pHh2}*)
set.seed(1)
x <- rnorm(1000)
y <- rnorm(1000)
count <- sample(1:100, 1000, TRUE)
x <- rep(x, count)
y <- rep(y, count)
ggfreqScatter(x, y) + ggtitle("Using Deciles of Frequency Counts, 2500 Bins")
# Try with x categorical
x1 <- sample(c('cat', 'dog', 'giraffe'), length(x), TRUE)
ggfreqScatter(x1, y)
# Try with y categorical
y1 <- sample(LETTERS[1:10], length(x), TRUE)
ggfreqScatter(x, y1)
# Both categorical
ggfreqScatter(x1, y1)
getHdata(titanic3)
require(Hmisc)
getHdata(titanic3)
names(titanic3)
d <- with(titanic3, as.data.frame(table(pclass, survived, sex)))
d <- subset(d, Freq > 0)
d
ggplot(d, aes(x=Freq, y=pclass)) + geom_point() + facet_wrap(~ survived)
d$survived <- factor(d$survived, 0:1, c('died', 'survived'))
d <- with(titanic3, as.data.frame(table(pclass, survived, sex)))
d <- subset(d, Freq > 0)
ggplot(d, aes(x=Freq, y=pclass)) + geom_point() + facet_wrap(~ survived)
getHdata(titanic3)
d <- upData(titanic3, survived = factor(survived, 0:1, c('died', 'survived')))
d <- with(d, as.data.frame(table(pclass, survived, sex)))
d <- subset(d, Freq > 0)
ggplot(d, aes(x=Freq, y=pclass)) + geom_point() + facet_wrap(~ survived)
d <- upData(titanic3, survived = factor(survived, 0:1, c('died', 'survived')), pr=FALSE)
d <- upData(titanic3, survived = factor(survived, 0:1, c('died', 'survived')), print=FALSE)
d <- with(d, as.data.frame(table(pclass, survived, sex)))
d <- subset(d, Freq > 0)
ggplot(d, aes(x=Freq, y=pclass)) + geom_point() + facet_wrap(~ survived)
names(titanic3)
table(d$parch)
table(titanc3$parch)
table(titanic3$parch)
d <- upData(titanic3,
agec     = cut2(age, c(10, 21)),
survived = factor(survived, 0:1, c('died', 'survived')), print=FALSE)
table(d$agec)
getHdata(titanic3)
d <- upData(titanic3,
agec     = cut2(age, c(10, 21)),
survived = factor(survived, 0:1, c('died', 'survived')), print=FALSE)
d <- with(d, as.data.frame(table(sex, pclass, agec, survived)))
d <- subset(d, Freq > 0)
ggplot(d, aes(x=Freq, y=agec)) + geom_point() + facet_grid(sex ~ survived) +
xlab('Frequency')
d
d <- upData(titanic3,
agec     = cut2(age, c(10, 21)),
survived = factor(survived, 0:1, c('died', 'survived')), print=FALSE)
d <- with(d, as.data.frame(table(sex, pclass, agec)))
d <- subset(d, Freq > 0)
ggplot(d, aes(x=Freq, y=agec)) + geom_point() + facet_grid(sex ~ pclass) +
xlab('Frequency')
ggplot(d, aes(x=Freq, y=agec)) + geom_point() + facet_grid(sex ~ pclass) +
xlab('Frequency') + ylab('Age')
getHdata(titanic3)
d <- upData(titanic3,
agec     = cut2(age, c(10, 15, 20, 30)),
survived = factor(survived, 0:1, c('died', 'survived')), print=FALSE)
d <- with(d, as.data.frame(table(sex, pclass, agec)))
d <- subset(d, Freq > 0)
ggplot(d, aes(x=Freq, y=agec)) + geom_point() + facet_grid(sex ~ pclass) +
xlab('Frequency') + ylab('Age')
library(knitr)
knit('slide.Rnw')
getwd()
scr1 <- seq(0.7, 5, length=200)
scr2 <- pmin(scr1 + 0.3, 1.5 * scr1)
plot(scr1, scr2, type='l')
abline(a=0, b=1, col=gray(.9))
scr1 <- seq(0, 5, length=200)
scr2 <- pmin(scr1 + 0.3, 1.5 * scr1)
plot(scr1, scr2, type='l')
abline(a=0, b=1, col=gray(.9))
scr1 <- seq(0, 5, length=200)
scr2 <- pmin(scr1 + 0.3, 1.5 * scr1)
plot(scr1, scr2, type='l', xlab='Baseline SCr', ylab='Cutoff for 48h SCr')
abline(a=0, b=1, col=gray(.9))
text(1, 4, 'AKI', cex=3)
text(1, 4, 'AKI', cex=2)
scr1 <- seq(0, 5, length=200)
scr2 <- pmin(scr1 + 0.3, 1.5 * scr1)
plot(scr1, scr2, type='l', xlab='Baseline SCr', ylab='Cutoff for 48h SCr')
abline(a=0, b=1, col=gray(.9))
text(1, 4, 'AKI', cex=2.5)
